import { MigrationInterface, QueryRunner } from "typeorm";

export class Default1727379162880 implements MigrationInterface {
    name = 'Default1727379162880'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "profile" ("id" number GENERATED BY DEFAULT AS IDENTITY, "name" varchar2(100) NOT NULL, "email" varchar2(100) NOT NULL, "biography" varchar2(100), "usuario" number, "usuario_id" number, CONSTRAINT "REL_55786b3b056a0e257de0544c0a" UNIQUE ("usuario_id"), CONSTRAINT "PK_3dd8bfc97e4a77c70971591bdcb" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "imagen" ("id" number GENERATED BY DEFAULT AS IDENTITY, "descricao" varchar2(255) NOT NULL, "imagem" clob NOT NULL, "usuario" number, "trending" number, "usuario_id" number, CONSTRAINT "REL_ea228b85fd2cc829837a2ac4bf" UNIQUE ("usuario_id"), CONSTRAINT "PK_c9838d52bca36e9244bcb95bee6" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "trending" ("id" number GENERATED BY DEFAULT AS IDENTITY, "message" varchar2(255), "uri" varchar2(255), "link" varchar2(255), "created" timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL, "usuario" number NOT NULL, "usuario_id" number, CONSTRAINT "PK_67fa365dcd46bd65397a019bec4" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "usuario" ("id" number GENERATED BY DEFAULT AS IDENTITY, "username" varchar2(255) NOT NULL, "password" varchar2(255) NOT NULL, "profile_id" number, CONSTRAINT "UQ_6ccff37176a6978449a99c82e10" UNIQUE ("username"), CONSTRAINT "REL_c924fd2c82294ce7c395644bdc" UNIQUE ("profile_id"), CONSTRAINT "PK_a56c58e5cabaa04fb2c98d2d7e2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE TABLE "trending_imagem" ("trendingId" number NOT NULL, "imagenId" number NOT NULL, CONSTRAINT "PK_d9f6613ef13c6a7306c15ac0cf3" PRIMARY KEY ("trendingId", "imagenId"))`);
        await queryRunner.query(`CREATE INDEX "IDX_9f16693523e6da586442ec1453" ON "trending_imagem" ("trendingId")`);
        await queryRunner.query(`CREATE INDEX "IDX_3ae4e5a288ad30069d5d3c6a6d" ON "trending_imagem" ("imagenId")`);
        await queryRunner.query(`ALTER TABLE "profile" ADD CONSTRAINT "FK_55786b3b056a0e257de0544c0a8" FOREIGN KEY ("usuario_id") REFERENCES "usuario" ("id")`);
        await queryRunner.query(`ALTER TABLE "imagen" ADD CONSTRAINT "FK_ea228b85fd2cc829837a2ac4bfe" FOREIGN KEY ("usuario_id") REFERENCES "usuario" ("id")`);
        await queryRunner.query(`ALTER TABLE "trending" ADD CONSTRAINT "FK_b79e5990b0ecdb3b5eccc67c0df" FOREIGN KEY ("usuario_id") REFERENCES "usuario" ("id")`);
        await queryRunner.query(`ALTER TABLE "usuario" ADD CONSTRAINT "FK_c924fd2c82294ce7c395644bdce" FOREIGN KEY ("profile_id") REFERENCES "profile" ("id") ON DELETE CASCADE`);
        await queryRunner.query(`ALTER TABLE "trending_imagem" ADD CONSTRAINT "FK_9f16693523e6da586442ec1453f" FOREIGN KEY ("trendingId") REFERENCES "trending" ("id") ON DELETE CASCADE`);
        await queryRunner.query(`ALTER TABLE "trending_imagem" ADD CONSTRAINT "FK_3ae4e5a288ad30069d5d3c6a6d8" FOREIGN KEY ("imagenId") REFERENCES "imagen" ("id")`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "trending_imagem" DROP CONSTRAINT "FK_3ae4e5a288ad30069d5d3c6a6d8"`);
        await queryRunner.query(`ALTER TABLE "trending_imagem" DROP CONSTRAINT "FK_9f16693523e6da586442ec1453f"`);
        await queryRunner.query(`ALTER TABLE "usuario" DROP CONSTRAINT "FK_c924fd2c82294ce7c395644bdce"`);
        await queryRunner.query(`ALTER TABLE "trending" DROP CONSTRAINT "FK_b79e5990b0ecdb3b5eccc67c0df"`);
        await queryRunner.query(`ALTER TABLE "imagen" DROP CONSTRAINT "FK_ea228b85fd2cc829837a2ac4bfe"`);
        await queryRunner.query(`ALTER TABLE "profile" DROP CONSTRAINT "FK_55786b3b056a0e257de0544c0a8"`);
        await queryRunner.query(`DROP INDEX "IDX_3ae4e5a288ad30069d5d3c6a6d"`);
        await queryRunner.query(`DROP INDEX "IDX_9f16693523e6da586442ec1453"`);
        await queryRunner.query(`DROP TABLE "trending_imagem"`);
        await queryRunner.query(`DROP TABLE "usuario"`);
        await queryRunner.query(`DROP TABLE "trending"`);
        await queryRunner.query(`DROP TABLE "imagen"`);
        await queryRunner.query(`DROP TABLE "profile"`);
    }

}
